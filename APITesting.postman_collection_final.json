{
	"info": {
		"_postman_id": "ac440e13-4d90-46d0-a6b1-d0efa175efa3",
		"name": "APITesting",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Students",
			"item": [
				{
					"name": "To get a student by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/students/1",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"students",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "To get all students",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/students/",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"students",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "To create a student",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"abc\",\r\n    \"lastName\": \"xyz\",\r\n    \"email\": \"abc@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://gateway-graphqltestproject-urtjok3rza-wl.a.run.app/students/",
							"protocol": "https",
							"host": [
								"gateway-graphqltestproject-urtjok3rza-wl",
								"a",
								"run",
								"app"
							],
							"path": [
								"students",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "To update a student",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":6,\r\n    \"firstName\": \"abc\",\r\n    \"lastName\": \"xyz\",\r\n    \"email\": \"hgf@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/students/",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"students",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "To delete a student with Id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/students/6",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"students",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "To get a student id which is not there in the list",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/students/2",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"students",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "To get a student id by entering special character",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/students/@",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"students",
								"@"
							]
						}
					},
					"response": []
				},
				{
					"name": "To get a student id by entering alphanumeric characters",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/students/abc1",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"students",
								"abc1"
							]
						}
					},
					"response": []
				},
				{
					"name": "To get student id by having spaces between characters",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/students/a b c",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"students",
								"a b c"
							]
						}
					},
					"response": []
				},
				{
					"name": "To insert an id explicitly",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"abc\",\r\n    \"lastName\": \"def\",\r\n    \"email\": \"abc@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/students/",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"students",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Subjects",
			"item": [
				{
					"name": "To get a subject with id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl2}}/subjects/1",
							"host": [
								"{{BaseUrl2}}"
							],
							"path": [
								"subjects",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "To get all subjects",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl2}}/subjects/",
							"host": [
								"{{BaseUrl2}}"
							],
							"path": [
								"subjects",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "To create a subject",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"name\": \"Physics\",\r\n\"domain\": \"Science\",\r\n\"description\": \"Energy\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl2}}/subjects/",
							"host": [
								"{{BaseUrl2}}"
							],
							"path": [
								"subjects",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "To update a subject",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"id\":4,\r\n\"description\": \"Mechanics\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl2}}/subjects/",
							"host": [
								"{{BaseUrl2}}"
							],
							"path": [
								"subjects",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "To delete a subject",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BaseUrl2}}/subjects/1",
							"host": [
								"{{BaseUrl2}}"
							],
							"path": [
								"subjects",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Teachers",
			"item": [
				{
					"name": "To get a teacher by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check for id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(\"1\");\r",
									"});\r",
									"pm.test(\"Check for first name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.firstName).to.eql(\"teacher a\");\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Check for lastName\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.lastName).to.eql(\"teacher lastName\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl3}}/teachers/1",
							"host": [
								"{{BaseUrl3}}"
							],
							"path": [
								"teachers",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "To get all teachers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl3}}/teachers/",
							"host": [
								"{{BaseUrl3}}"
							],
							"path": [
								"teachers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "To create a teacher",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check for last name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.lastName).to.eql(\"teacher lastName\");\r",
									"});\r",
									"pm.test(\"Check for first name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.firstName).to.eql(\"teacher a\");\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " {\r\n\"firstName\": \"teacher firstName\",\r\n\"lastName\": \"teacher lastName\",\r\n\"email\": \"vaibhav@gmail.com\",\r\n\"address\": \"Greater Noida\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl3}}/teachers/",
							"host": [
								"{{BaseUrl3}}"
							],
							"path": [
								"teachers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "To update a teacher",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"id\":1,\r\n\"firstName\": \"teacher a\",\r\n\"lastName\": \"teacher lastName\",\r\n\"email\": \"teacher@gmail.com\",\r\n\"address\": \"Greater Noida Delhi\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl3}}/teachers/",
							"host": [
								"{{BaseUrl3}}"
							],
							"path": [
								"teachers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "To delete a teacher",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BaseUrl3}}/teachers/2",
							"host": [
								"{{BaseUrl3}}"
							],
							"path": [
								"teachers",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "To get the teacher id which is not there in the list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check for id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(\"1\");\r",
									"});\r",
									"pm.test(\"Check for first name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.firstName).to.eql(\"teacher a\");\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Check for lastName\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.lastName).to.eql(\"teacher lastName\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl3}}/teachers/25",
							"host": [
								"{{BaseUrl3}}"
							],
							"path": [
								"teachers",
								"25"
							]
						}
					},
					"response": []
				},
				{
					"name": "To get a teacher id by entering special character",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check for id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(\"1\");\r",
									"});\r",
									"pm.test(\"Check for first name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.firstName).to.eql(\"teacher a\");\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Check for lastName\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.lastName).to.eql(\"teacher lastName\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl3}}/teachers/@",
							"host": [
								"{{BaseUrl3}}"
							],
							"path": [
								"teachers",
								"@"
							]
						}
					},
					"response": []
				},
				{
					"name": "To get a teacher id by entering alphanumeric characters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check for id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(\"1\");\r",
									"});\r",
									"pm.test(\"Check for first name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.firstName).to.eql(\"teacher a\");\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Check for lastName\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.lastName).to.eql(\"teacher lastName\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl3}}/teachers/abc1",
							"host": [
								"{{BaseUrl3}}"
							],
							"path": [
								"teachers",
								"abc1"
							]
						}
					},
					"response": []
				},
				{
					"name": "To get teacher id by having space between characters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check for id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(\"1\");\r",
									"});\r",
									"pm.test(\"Check for first name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.firstName).to.eql(\"teacher a\");\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Check for lastName\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.lastName).to.eql(\"teacher lastName\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl3}}/teachers/a b c",
							"host": [
								"{{BaseUrl3}}"
							],
							"path": [
								"teachers",
								"a b c"
							]
						}
					},
					"response": []
				},
				{
					"name": "To insert an id explicitly",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check for last name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.lastName).to.eql(\"teacher lastName\");\r",
									"});\r",
									"pm.test(\"Check for first name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.firstName).to.eql(\"teacher a\");\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " {\r\n\"firstName\": \"teacher firstName\",\r\n\"lastName\": \"teacher lastName\",\r\n\"email\": \"vaibhav@gmail.com\",\r\n\"address\": \"Greater Noida\",\r\n\"id\": \"5\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl3}}/teachers/",
							"host": [
								"{{BaseUrl3}}"
							],
							"path": [
								"teachers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "To insert id explicitly",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check for last name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.lastName).to.eql(\"teacher lastName\");\r",
									"});\r",
									"pm.test(\"Check for first name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.firstName).to.eql(\"teacher a\");\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{BaseUrl3}}/teachers/",
							"host": [
								"{{BaseUrl3}}"
							],
							"path": [
								"teachers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "to insert a character as id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check for last name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.lastName).to.eql(\"teacher lastName\");\r",
									"});\r",
									"pm.test(\"Check for first name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.firstName).to.eql(\"teacher a\");\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " {\r\n\"firstName\": \"teacher firstName\",\r\n\"lastName\": \"teacher lastName\",\r\n\"email\": \"vaibhav@gmail.com\",\r\n\"address\": \"Greater Noida\",\r\n\"id\": \"xyz\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl3}}/teachers/",
							"host": [
								"{{BaseUrl3}}"
							],
							"path": [
								"teachers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Enter null values in the body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check for last name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.lastName).to.eql(\"teacher lastName\");\r",
									"});\r",
									"pm.test(\"Check for first name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.firstName).to.eql(\"teacher a\");\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " {\r\n\"firstName\": \"\",\r\n\"lastName\": \"\",\r\n\"email\": \"\",\r\n\"address\": \"\",\r\n\"id\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl3}}/teachers/",
							"host": [
								"{{BaseUrl3}}"
							],
							"path": [
								"teachers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Updating teacher data with invaild id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"id\":20,\r\n\"firstName\": \"teacher\",\r\n\"lastName\": \"teacher lastName\",\r\n\"email\": \"teacher@gmail.com\",\r\n\"address\": \"Greater Noida Delhi\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl3}}/teachers/",
							"host": [
								"{{BaseUrl3}}"
							],
							"path": [
								"teachers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Updating teacher's first and last name by special characters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"id\":4,\r\n\"firstName\": \"abc!@#\",\r\n\"lastName\": \"*&^\",\r\n\"email\": \"teacher@gmail.com\",\r\n\"address\": \"Greater Noida Delhi\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl3}}/teachers/",
							"host": [
								"{{BaseUrl3}}"
							],
							"path": [
								"teachers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Deleting an id which is not there in the data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BaseUrl3}}/teachers/21",
							"host": [
								"{{BaseUrl3}}"
							],
							"path": [
								"teachers",
								"21"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}